/*
 * Please see the included README.md file for license terms and conditions.
 */


// This file is a suggested starting place for your code.
// It is completely optional and not required.
// Note the reference that includes it in the index.html file.


/*jslint browser:true, devel:true, white:true, vars:true */
/*global $:false, intel:false app:false, dev:false, cordova:false */


// For improved debugging and maintenance of your app, it is highly
// recommended that you separate your JavaScript from your HTML files.
// Use the addEventListener() method to associate events with DOM elements.

// For example:

// var el ;
// el = document.getElementById("id_myButton") ;
// el.addEventListener("click", myEventHandler, false) ;



// The function below is an example of the best way to "start" your app.
// This example is calling the standard Cordova "hide splashscreen" function.
// You can add other code to it or add additional functions that are triggered
// by the same event or other events.
var socket,io,alertas={};
function delServidor(data){
	if(data.success == false){
		alertas.color = "red";
		alertas.btnColor = "red";
		alertas.icon=data.icono || "fa fa-ravelry";
	}else if(data.success == true){
		alertas.color = "blue";
		alertas.btnColor = "blue";
		alertas.icon = data.icono || "fa fa-thumbs-o-up";
	}
	alertas.contenido = data.mensaje;
	alertas.tema = data.tema || "supervan";
	alertas.btnConfirma = data.btnConfirma || "No";
	alertas.funcionConfirma = data.funcionConfirma || "";
	alertas.funcionCancela = data.funcionCancela || "";
	//console.log("Del Servidor: ",alertas);
	alerta(alertas);
}
function onAppReady() {
    if( navigator.splashscreen && navigator.splashscreen.hide ) {   // Cordova API detected
        navigator.splashscreen.hide() ;
    }        
}
document.addEventListener("app.Ready", onAppReady, false) ;
$(document).ready(function(){
    
});
(function($) {
     socket=io.connect("http://connect.softtek.hn");
     socket.on("saludo",function(datos){
       //$("#saludo").text(datos);
         data={
             mensaje:datos,
             success:true
         };
         delServidor(data);
     });
    socket.on("contactos",function(datos){
	$("#contact_table").empty();
        if(datos.length > 0){
           datos.forEach(function(values){
             var contacto ='<tr><td class="body-item mbr-fonts-style display-7">'+
                            values.fecha_creacion+
                            '</td><td class="body-item mbr-fonts-style display-7">'+
                            values.nombre+
                            '</td><td class="body-item mbr-fonts-style display-7">'+
                            values.telefono+
                            '</td><td class="body-item mbr-fonts-style display-7">'+
                            values.mensaje+'</td></tr>';
             $("#contact_table").append(contacto);
           });
         }else{
           var contacto ='<tr><td class="body-item mbr-fonts-style display-7">'+
			"No"+
			'</td><td class="body-item mbr-fonts-style display-7">'+
			"hay"+
			'</td><td class="body-item mbr-fonts-style display-7">'+
			"registros"+
			'</td><td class="body-item mbr-fonts-style display-7">'+
			'</td></tr>';
           $("#contact_table").append(contacto);
         }
     });
    $("#reload").click(function(){
       socket.emit("recargar");
     });
    
    $('#table-contact').DataTable( {
       "language": {
           "lengthMenu": "Mostrando _MENU_ registros por página",
           "zeroRecords": "Nose encontro nada - lo siento",
           "info": "Mostrando página _PAGE_ of _PAGES_",
           "infoEmpty": "No hay registros",
           "infoFiltered": "(filtered from _MAX_ total registros)",
           "decimal": ".",
           "thousands": ",",
           "search": "Buscar"
       }
    });
})(jQuery);
// document.addEventListener("deviceready", onAppReady, false) ;
// document.addEventListener("onload", onAppReady, false) ;

// The app.Ready event shown above is generated by the init-dev.js file; it
// unifies a variety of common "ready" events. See the init-dev.js file for
// more details. You can use a different event to start your app, instead of
// this event. A few examples are shown in the sample code above. If you are
// using Cordova plugins you need to either use this app.Ready event or the
// standard Crordova deviceready event. Others will either not work or will
// work poorly.

// NOTE: change "dev.LOG" in "init-dev.js" to "true" to enable some console.log
// messages that can help you debug Cordova app initialization issues.
